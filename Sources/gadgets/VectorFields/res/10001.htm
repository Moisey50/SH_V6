<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-1252"><link rel="stylesheet" type="text/css" href="1001.css"><title>TestVectorField gadget</title></head><body><table width="100%" id="table1" class="pagelike"><tr><th class="pg">TestVectorField gadget</th></tr><tr><td height="113">&nbsp; <table id="table2" class="pagelike" width="100%"><tr><td width="204"><b>Input Formats:</b></td><td>CVideoFrame</td></tr><tr><td width="204"><b>Outputs Formats:</b></td><td>CUserDataFrame(CVectorField) </td></tr><tr><td width="204"><b>Duplex Formats:</b> </td><td>NONE </td></tr><tr><td width="204"><b>Location in gadget tree:</b> </td><td>Filters\VectorFields\ for grouped by type or VectorFields\ by default</td></tr></table><p>This is simple gadget, which add to input video frame test vector field, which is defined as follows:</p>
<pre class="codetext">
typedef struct _tagvector 
	{ 
	      double x,y; 
	}vector,*pvector;
	 
	class CVectorField 
	{ 
	public: 
		int sizeX, sizeY; 
		double stepX, stepY; 
		vector* vectors; 
	public: 
		CVectorField()
		~CVectorField()
	};</pre><p>The test vector fields represent uniform field of the vectors which rotates from frame to frame. </p><p>The work of the gadget with Vector Fields illustrated by this <a href="tvg://tvg/2000.tvg">sample</a>.</p><p>Gadget has no setup dialog.</p></td></tr><tr><td height="113">&nbsp;</td></tr></table></body></html>